{
  "stats": {
    "suites": 11,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2019-03-06T17:15:28.615Z",
    "end": "2019-03-06T17:15:28.655Z",
    "duration": 40,
    "testsRegistered": 12,
    "passPercent": 91.7,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "da1a7228-ddb1-417f-91e7-b3b64c7a4476",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [
      {
        "title": "should return false when it doesn't the word.",
        "fullTitle": "should return false when it doesn't the word.",
        "timedOut": false,
        "duration": 0,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "let check = wd.Search(\"mu\")\nassert.equal(check, false);",
        "err": {},
        "isRoot": true,
        "uuid": "82ffc9a8-c350-4e61-a60d-3ba541ec99a2",
        "isHook": false,
        "skipped": true
      }
    ],
    "suites": [
      {
        "uuid": "ea03cc85-2ec1-4bbf-bb50-b4b9eb6bfcce",
        "title": "Wordladder",
        "fullFile": "D:\\java_web\\Wordladder\\test.js",
        "file": "\\test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Wordladder \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "let wd = new Wordladder(\"./test.json\");",
            "err": {},
            "isRoot": false,
            "uuid": "7fd0d615-a76f-4e1f-922a-12c3257bd18a",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "45d41b86-64cd-46b4-9b9d-4b9092e7d41e",
            "title": "#Search(word)",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when it has the word.",
                "fullTitle": "Wordladder #Search(word) should return true when it has the word.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let check = wd.Search(\"data\")\nassert.equal(check, true);\ntest(\"should return false when it doesn't the word.\", function () {\n    let check = wd.Search(\"mu\")\n    assert.equal(check, false);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e3e064d1-a7d3-4d3d-ad4f-e03a5b199049",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e3e064d1-a7d3-4d3d-ad4f-e03a5b199049"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "85fa2b1a-913a-45dc-82e1-6992de359027",
            "title": "#GetInput()",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "getInput return the input",
                "fullTitle": "Wordladder #GetInput() getInput return the input",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wd.Input = \"data\";// setTheInput\nlet input = wd.GetInput();\nassert.equal(input, \"data\", \"==\");",
                "err": {},
                "isRoot": false,
                "uuid": "7a4b2bfd-db0a-4429-a802-204cbd89341a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7a4b2bfd-db0a-4429-a802-204cbd89341a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a11ab290-e3d3-4a5e-80bc-a6430129814a",
            "title": "#GetOutput()",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "get the output",
                "fullTitle": "Wordladder #GetOutput() get the output",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wd.Output = \"data\";\nassert.equal(wd.GetOutput(), \"data\");",
                "err": {},
                "isRoot": false,
                "uuid": "ff4df94c-56f2-4761-a4c2-b85329ee8be5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ff4df94c-56f2-4761-a4c2-b85329ee8be5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7e27f3b5-8d29-44d2-8833-974ea2e74143",
            "title": "#SetOutput()",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "getOutput return the input",
                "fullTitle": "Wordladder #SetOutput() getOutput return the input",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wd.Output = \"data\";// wrong output set\nwd.SetOutput(\"buff\");// right output set\nassert.equal(wd.Output, \"buff\");",
                "err": {},
                "isRoot": false,
                "uuid": "9aeb62d8-0f23-4015-8f90-032867595ff4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9aeb62d8-0f23-4015-8f90-032867595ff4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "ff300ef7-4f2e-4131-b1c3-3be9a3e49490",
            "title": "#SetInput()",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "getInput return the input",
                "fullTitle": "Wordladder #SetInput() getInput return the input",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wd.Input = \"data\";// raw set the wrong input\nwd.SetInput(\"buff\");// set the right input\nassert.equal(wd.Input, \"buff\");",
                "err": {},
                "isRoot": false,
                "uuid": "a772fccd-9236-481e-b842-f2cc2299597d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a772fccd-9236-481e-b842-f2cc2299597d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "7250f098-4e0a-4e9f-b1b9-238860b3a89a",
            "title": "#BFS()",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return ['data', 'dota', 'cota', 'cote', 'code']",
                "fullTitle": "Wordladder #BFS() should return ['data', 'dota', 'cota', 'cote', 'code']",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "wd.SetInput(\"data\");\nwd.SetOutput(\"code\");\nassert.includeOrderedMembers(wd.BFS(), [ 'code', 'cote', 'cota', 'dota', 'data' ]);",
                "err": {},
                "isRoot": false,
                "uuid": "0d74dc7e-bd5f-42f4-93a1-422f41878a49",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return [''] if we don't have the path",
                "fullTitle": "Wordladder #BFS() should return [''] if we don't have the path",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// set two wrong words\nwd.SetInput(\"fu\");\nwd.SetOutput(\"mu\");\nassert.includeOrderedMembers(wd.BFS(), ['']);",
                "err": {},
                "isRoot": false,
                "uuid": "04f1ec92-ce1a-4fb2-8a5e-e077d215c063",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0d74dc7e-bd5f-42f4-93a1-422f41878a49",
              "04f1ec92-ce1a-4fb2-8a5e-e077d215c063"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "26b729fa-0993-4289-9c1b-cb32469e213d",
        "title": "UI",
        "fullFile": "D:\\java_web\\Wordladder\\test.js",
        "file": "\\test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "valid test",
            "fullTitle": "UI valid test",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "driver = new webdriver.Builder().forBrowser('chrome').build();//start chrome\ndriver.get(\"http://127.0.0.1:8081\").then(function() {// to simplify, we choose to test the page at server not in the development environment\n    driver.findElement(By.id('input')).then(function(input){// get the input\n        input.sendKeys(\"data\").then(function(){// set the Input value to data\n            driver.findElement(By.id('output')).then(function(output){// get the output\n                output.click().then(function(){// click output to trigger word detection\n                    driver.findElement(By.id(\"input-valid\")).then(function(inputValid){\n                        inputValid.getAttribute('class').then(function(ClassName){\n                            expect(ClassName).to.equal(\"valid-feedback\");\n                            inputValid.getText().then(function(text){\n                                expect(text).to.equal(\"Looks good!\");\n                                driver.quit();\n                            })\n                        })\n                    })\n                })\n            });\n        })\n    });\n})",
            "err": {},
            "isRoot": false,
            "uuid": "f3cbf31c-9f38-405d-9069-24c2bb5969e2",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f3cbf31c-9f38-405d-9069-24c2bb5969e2"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 7,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "16340b63-7f25-4408-82bb-16db80e57955",
        "title": "Wordladder BBD",
        "fullFile": "D:\\java_web\\Wordladder\\test.js",
        "file": "\\test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: Before all tests.",
            "fullTitle": "Wordladder BBD \"before all\" hook: Before all tests.",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "wd = new Wordladder(\"./test.json\");\nwd.SetInput(\"data\");\nwd.SetOutput(\"code\");",
            "err": {},
            "isRoot": false,
            "uuid": "bb443c38-5700-41e4-b75b-fb5199fb277b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "13ff0259-76ea-473c-9202-69db3d74eefd",
            "title": "search whether the word is in the dictionary",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return true when it has the word.(data is in)",
                "fullTitle": "Wordladder BBD search whether the word is in the dictionary should return true when it has the word.(data is in)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let check = wd.Search(\"data\")\nexpect(check).to.equal(true);",
                "err": {},
                "isRoot": false,
                "uuid": "d5c2ef5b-62d7-48b6-89bd-4afd47a61a7d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return false when it doesn't the word.(mu is not in)",
                "fullTitle": "Wordladder BBD search whether the word is in the dictionary should return false when it doesn't the word.(mu is not in)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let check = wd.Search(\"mu\")\nexpect(check).to.equal(false);",
                "err": {},
                "isRoot": false,
                "uuid": "dee17cc3-0480-4c71-b43a-81d374396384",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d5c2ef5b-62d7-48b6-89bd-4afd47a61a7d",
              "dee17cc3-0480-4c71-b43a-81d374396384"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "91fa9344-7c0a-4001-8cf4-2937ab03cc9c",
            "title": "the shortest path search",
            "fullFile": "D:\\java_web\\Wordladder\\test.js",
            "file": "\\test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the shortest path to appear in sequence ",
                "fullTitle": "Wordladder BBD the shortest path search should return the shortest path to appear in sequence ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(wd.BFS()).to.include.deep.ordered.members([ 'code', 'cote', 'cota', 'dota', 'data' ]);",
                "err": {},
                "isRoot": false,
                "uuid": "c3356032-ef3e-48d2-ab02-708c077d3f39",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c3356032-ef3e-48d2-ab02-708c077d3f39"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [
      "82ffc9a8-c350-4e61-a60d-3ba541ec99a2"
    ],
    "duration": null,
    "root": true,
    "rootEmpty": false,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}